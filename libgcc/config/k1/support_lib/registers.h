/* Generated by MDS for k1 */
#ifndef _K1_GENERATED_REGISTERS_H
#define _K1_GENERATED_REGISTERS_H

/* Register numbers */
#define _K1_SFR_PC 0 // Program Counter $pc $s0
#define _K1_SFR_PS 1 // Processing Status $ps $s1
#define _K1_SFR_SPC 2 // Shadow Program Counter $spc $s2
#define _K1_SFR_SPS 3 // Shadow Processing Status $sps $s3
#define _K1_SFR_SSPC 4 // Shadow Shadow Program Counter $sspc $s4
#define _K1_SFR_SSPS 5 // Shadow Shadow Processing Status $ssps $s5
#define _K1_SFR_SSSPC 6 // Shadow Shadow Shadow Program Counter $ssspc $s6
#define _K1_SFR_SSSPS 7 // Shadow Shadow Shadow Processing Status $sssps $s7
#define _K1_SFR_CS 8 // Compute Status $cs $s8
#define _K1_SFR_RA 9 // Return Address $ra $s9
#define _K1_SFR_PI 10 // Processing Identification $pcr $s10
#define _K1_SFR_LS 11 // Loop Start Address $ls $s11
#define _K1_SFR_LE 12 // Loop Exit Address $le $s12
#define _K1_SFR_LC 13 // Loop Counter $lc $s13
#define _K1_SFR_EA 14 // Excepting Address $ea $s14
#define _K1_SFR_EV 15 // Exception Vector $ev $s15
#define _K1_SFR_EV0 16 // Event Register 0 $ev0 $s16
#define _K1_SFR_EV1 17 // Event Register 1 $ev1 $s17
#define _K1_SFR_EV2 18 // Event Register 2 $ev2 $s18
#define _K1_SFR_EV3 19 // Event Register 3 $ev3 $s19
#define _K1_SFR_EV4 20 // Event Register 4 $ev4 $s20
#define _K1_SFR_EV5 21 // Event Register 5 $ev5 $s21
#define _K1_SFR_TXS 22 // NoC Transmit Status $txs $s22
#define _K1_SFR_RXS 23 // NoC Receive Status $rxs $s23
#define _K1_SFR_PM0 24 // Performance Monitor 0 $pm0 $s24
#define _K1_SFR_PM1 25 // Performance Monitor 1 $pm1 $s25
#define _K1_SFR_PM2 26 // Performance Monitor 2 $pm2 $s26
#define _K1_SFR_PM3 27 // Performance Monitor 3 $pm3 $s27
#define _K1_SFR_PMC 28 // Performance Monitor Control $pmc $s28
#define _K1_SFR_SR0 29 // System Reserved 0 $sr0 $s29
#define _K1_SFR_SR1 30 // System Reserved 1 $sr1 $s30
#define _K1_SFR_SR2 31 // Page Table Root $sr2 $s31
#define _K1_SFR_T0V 32 // Timer 0 value $t0v $s32
#define _K1_SFR_T1V 33 // Timer 1 value $t1v $s33
#define _K1_SFR_T0R 34 // Timer 0 reload value $t0r $s34
#define _K1_SFR_T1R 35 // Timer 1 reload value $t1r $s35
#define _K1_SFR_TC 36 // Timer Control $tcr $s36
#define _K1_SFR_WDC 37 // Watchdog Counter $wdc $s37
#define _K1_SFR_WDR 38 // Watchdog Reload $wdr $s38
#define _K1_SFR_IS 39 // Interrupt Status $is $s39
#define _K1_SFR_ILL 40 // Interrupt Levels Low $ill $s40
#define _K1_SFR_ILH 41 // Interrupt Levels High $ilh $s41
#define _K1_SFR_MMC 42 // Memory Management Control $mmc $s42
#define _K1_SFR_TEL 43 // TLB Entry Low $tel $s43
#define _K1_SFR_TEH 44 // TLB Entry High $teh $s44
#define _K1_SFR_DV 45 // Debug Vector $dv $s45
#define _K1_SFR_OCE0 46 // OCE Reserved 0 $oce0 $s46
#define _K1_SFR_OCE1 47 // OCE Reserved 1 $oce1 $s47
#define _K1_SFR_OCEC 48 // OCE Control $ocec $s48
#define _K1_SFR_OCEA 49 // OCE Address $ocea $s49

/* Register masks*/

#define _K1_MASK_PI_ALUD 0x2 // Size of the ALU (32 or 64 bits)
#define _K1_SHIFT_PI_ALUD  1
#define _K1_BYTE_PI_ALUD 0
#define _K1_BFX_PI_ALUD 0x2
#define _K1_HALF_PI_ALUD 0
#define _K1_HFX_PI_ALUD 0x2

#define _K1_MASK_MMC_ASN 0x1ff // Address Space Number
#define _K1_SHIFT_MMC_ASN  0
#define _K1_HALF_MMC_ASN 0
#define _K1_HFX_MMC_ASN 0x1ff

#define _K1_MASK_CS_CC 0xffff0000 // Carry Counter
#define _K1_SHIFT_CS_CC  16
#define _K1_HALF_CS_CC 1
#define _K1_HFX_CS_CC 0xffff

#define _K1_MASK_TC_CDR 0xffff // Clock Division Ratio
#define _K1_SHIFT_TC_CDR  0
#define _K1_HALF_TC_CDR 0
#define _K1_HFX_TC_CDR 0xffff

#define _K1_MASK_CS_CS 0xffffffff // Compute Status
#define _K1_SHIFT_CS_CS  0

#define _K1_MASK_PS_DCE 0x400 // Data Cache Enable
#define _K1_SHIFT_PS_DCE  10
#define _K1_BYTE_PS_DCE 1
#define _K1_BFX_PS_DCE 0x4
#define _K1_HALF_PS_DCE 0
#define _K1_HFX_PS_DCE 0x400

#define _K1_MASK_PS_DM 0x2 // Diagnostic Mode
#define _K1_SHIFT_PS_DM  1
#define _K1_BYTE_PS_DM 0
#define _K1_BFX_PS_DM 0x2
#define _K1_HALF_PS_DM 0
#define _K1_HFX_PS_DM 0x2

#define _K1_MASK_MMC_DPS 0x3c00 // Default Page Size
#define _K1_SHIFT_MMC_DPS  10
#define _K1_BYTE_MMC_DPS 1
#define _K1_BFX_MMC_DPS 0x3c
#define _K1_HALF_MMC_DPS 0
#define _K1_HFX_MMC_DPS 0x3c00

#define _K1_MASK_CS_DZ 0x4 // IEEE 754 Divide by Zero
#define _K1_SHIFT_CS_DZ  2
#define _K1_BYTE_CS_DZ 0
#define _K1_BFX_CS_DZ 0x4
#define _K1_HALF_CS_DZ 0
#define _K1_HFX_CS_DZ 0x4

#define _K1_MASK_MMC_E 0x80000000 // Error Flag
#define _K1_SHIFT_MMC_E  31
#define _K1_BYTE_MMC_E 3
#define _K1_BFX_MMC_E 0x80
#define _K1_HALF_MMC_E 1
#define _K1_HFX_MMC_E 0x8000

#define _K1_MASK_PS_EC 0xf0000000 // Exception Cause
#define _K1_SHIFT_PS_EC  28
#define _K1_BYTE_PS_EC 3
#define _K1_BFX_PS_EC 0xf0
#define _K1_HALF_PS_EC 1
#define _K1_HFX_PS_EC 0xf000

#define _K1_MASK_PI_FPUE 0x8 // FPU Enable
#define _K1_SHIFT_PI_FPUE  3
#define _K1_BYTE_PI_FPUE 0
#define _K1_BFX_PI_FPUE 0x8
#define _K1_HALF_PI_FPUE 0
#define _K1_HFX_PI_FPUE 0x8

#define _K1_MASK_PS_GME 0xc0 // Group Mode Enable
#define _K1_SHIFT_PS_GME  6
#define _K1_BYTE_PS_GME 0
#define _K1_BFX_PS_GME 0xc0
#define _K1_HALF_PS_GME 0
#define _K1_HFX_PS_GME 0xc0

#define _K1_MASK_PS_HLE 0x20 // Hardware Loop Enable
#define _K1_SHIFT_PS_HLE  5
#define _K1_BYTE_PS_HLE 0
#define _K1_BFX_PS_HLE 0x20
#define _K1_HALF_PS_HLE 0
#define _K1_HFX_PS_HLE 0x20

#define _K1_MASK_PS_HTE 0xc // Hardware Trap Enable
#define _K1_SHIFT_PS_HTE  2
#define _K1_BYTE_PS_HTE 0
#define _K1_BFX_PS_HTE 0xc
#define _K1_HALF_PS_HTE 0
#define _K1_HFX_PS_HTE 0xc

#define _K1_MASK_CS_IC 0x1 // Integer Carry
#define _K1_SHIFT_CS_IC  0
#define _K1_BYTE_CS_IC 0
#define _K1_BFX_CS_IC 0x1
#define _K1_HALF_CS_IC 0
#define _K1_HFX_CS_IC 0x1

#define _K1_MASK_PS_ICE 0x100 // Instruction Cache Enable
#define _K1_SHIFT_PS_ICE  8
#define _K1_BYTE_PS_ICE 1
#define _K1_BFX_PS_ICE 0x1
#define _K1_HALF_PS_ICE 0
#define _K1_HFX_PS_ICE 0x100

#define _K1_MASK_MMC_IDX 0x7fc00000 // Index
#define _K1_SHIFT_MMC_IDX  22
#define _K1_HALF_MMC_IDX 1
#define _K1_HFX_MMC_IDX 0x7fc0

#define _K1_MASK_PS_IE 0x10 // Interrupt Enable
#define _K1_SHIFT_PS_IE  4
#define _K1_BYTE_PS_IE 0
#define _K1_BFX_PS_IE 0x10
#define _K1_HALF_PS_IE 0
#define _K1_HFX_PS_IE 0x10

#define _K1_MASK_PS_IL 0xf000 // Interrupt Level
#define _K1_SHIFT_PS_IL  12
#define _K1_BYTE_PS_IL 1
#define _K1_BFX_PS_IL 0xf0
#define _K1_HALF_PS_IL 0
#define _K1_HFX_PS_IL 0xf000

#define _K1_MASK_IS_ILE 0xffff0000 // Interrupt Line Enabled
#define _K1_SHIFT_IS_ILE  16
#define _K1_HALF_IS_ILE 1
#define _K1_HFX_IS_ILE 0xffff

#define _K1_MASK_IS_ILR 0xffff // Interrupt Line Requested
#define _K1_SHIFT_IS_ILR  0
#define _K1_HALF_IS_ILR 0
#define _K1_HFX_IS_ILR 0xffff

#define _K1_MASK_CS_IN 0x20 // IEEE 754 Inexact
#define _K1_SHIFT_CS_IN  5
#define _K1_BYTE_CS_IN 0
#define _K1_BFX_CS_IN 0x20
#define _K1_HALF_CS_IN 0
#define _K1_HFX_CS_IN 0x20

#define _K1_MASK_CS_IO 0x2 // IEEE 754 Invalid Operation
#define _K1_SHIFT_CS_IO  1
#define _K1_BYTE_CS_IO 0
#define _K1_BFX_CS_IO 0x2
#define _K1_HALF_CS_IO 0
#define _K1_HFX_CS_IO 0x2

#define _K1_MASK_IS_IS 0xffffffff // Interrupt Status
#define _K1_SHIFT_IS_IS  0

#define _K1_MASK_MMC_LPS 0x3c000 // Large Page Size
#define _K1_SHIFT_MMC_LPS  14

#define _K1_MASK_PI_MAUE 0x4 // MAU Enable
#define _K1_SHIFT_PI_MAUE  2
#define _K1_BYTE_PI_MAUE 0
#define _K1_BFX_PI_MAUE 0x4
#define _K1_HALF_PI_MAUE 0
#define _K1_HFX_PI_MAUE 0x4

#define _K1_MASK_MMC_MMC 0xffffffff // Memory Management Control
#define _K1_SHIFT_MMC_MMC  0

#define _K1_MASK_PS_MME 0x800 // Memory Management Enable
#define _K1_SHIFT_PS_MME  11
#define _K1_BYTE_PS_MME 1
#define _K1_BFX_PS_MME 0x8
#define _K1_HALF_PS_MME 0
#define _K1_HFX_PS_MME 0x800

#define _K1_MASK_PI_NID 0xff0000 // Node Identifier in system
#define _K1_SHIFT_PI_NID  16
#define _K1_BYTE_PI_NID 2
#define _K1_BFX_PI_NID 0xff
#define _K1_HALF_PI_NID 1
#define _K1_HFX_PI_NID 0xff

#define _K1_MASK_CS_OV 0x8 // IEEE 754 Overflow
#define _K1_SHIFT_CS_OV  3
#define _K1_BYTE_CS_OV 0
#define _K1_BFX_CS_OV 0x8
#define _K1_HALF_CS_OV 0
#define _K1_HFX_CS_OV 0x8

#define _K1_MASK_PI_PI 0xffffffff // Processing Identification
#define _K1_SHIFT_PI_PI  0

#define _K1_MASK_PI_PID 0xf800 // Processing Identifier in cluster
#define _K1_SHIFT_PI_PID  11
#define _K1_BYTE_PI_PID 1
#define _K1_BFX_PI_PID 0xf8
#define _K1_HALF_PI_PID 0
#define _K1_HFX_PI_PID 0xf800

#define _K1_MASK_PS_PM 0x1 // Privilege Mode
#define _K1_SHIFT_PS_PM  0
#define _K1_BYTE_PS_PM 0
#define _K1_BFX_PS_PM 0x1
#define _K1_HALF_PS_PM 0
#define _K1_HFX_PS_PM 0x1

#define _K1_MASK_PMC_PM01 0x10000 // PM0 and PM1 Chaining
#define _K1_SHIFT_PMC_PM01  16
#define _K1_BYTE_PMC_PM01 2
#define _K1_BFX_PMC_PM01 0x1
#define _K1_HALF_PMC_PM01 1
#define _K1_HFX_PMC_PM01 0x1

#define _K1_MASK_PMC_PM0C 0xf // PM0 Configuration
#define _K1_SHIFT_PMC_PM0C  0
#define _K1_BYTE_PMC_PM0C 0
#define _K1_BFX_PMC_PM0C 0xf
#define _K1_HALF_PMC_PM0C 0
#define _K1_HFX_PMC_PM0C 0xf

#define _K1_MASK_PMC_PM1C 0xf0 // PM1 Configuration
#define _K1_SHIFT_PMC_PM1C  4
#define _K1_BYTE_PMC_PM1C 0
#define _K1_BFX_PMC_PM1C 0xf0
#define _K1_HALF_PMC_PM1C 0
#define _K1_HFX_PMC_PM1C 0xf0

#define _K1_MASK_PMC_PM23 0x20000 // PM2 and PM3 Chaining
#define _K1_SHIFT_PMC_PM23  17
#define _K1_BYTE_PMC_PM23 2
#define _K1_BFX_PMC_PM23 0x2
#define _K1_HALF_PMC_PM23 1
#define _K1_HFX_PMC_PM23 0x2

#define _K1_MASK_PMC_PM2C 0xf00 // PM2 Configuration
#define _K1_SHIFT_PMC_PM2C  8
#define _K1_BYTE_PMC_PM2C 1
#define _K1_BFX_PMC_PM2C 0xf
#define _K1_HALF_PMC_PM2C 0
#define _K1_HFX_PMC_PM2C 0xf00

#define _K1_MASK_PMC_PM3C 0xf000 // PM3 Configuration
#define _K1_SHIFT_PMC_PM3C  12
#define _K1_BYTE_PMC_PM3C 1
#define _K1_BFX_PMC_PM3C 0xf0
#define _K1_HALF_PMC_PM3C 0
#define _K1_HFX_PMC_PM3C 0xf000

#define _K1_MASK_PMC_PMC 0xffffffff // Performance Monitor Control
#define _K1_SHIFT_PMC_PMC  0

#define _K1_MASK_PS_PS 0xffffffff // Processing Status
#define _K1_SHIFT_PS_PS  0

#define _K1_MASK_PI_RID 0xff000000 // Revision ID
#define _K1_SHIFT_PI_RID  24
#define _K1_BYTE_PI_RID 3
#define _K1_BFX_PI_RID 0xff
#define _K1_HALF_PI_RID 1
#define _K1_HFX_PI_RID 0xff00

#define _K1_MASK_CS_RM 0x300 // IEEE 754 Rounding Mode
#define _K1_SHIFT_CS_RM  8
#define _K1_BYTE_CS_RM 1
#define _K1_BFX_CS_RM 0x3
#define _K1_HALF_CS_RM 0
#define _K1_HFX_CS_RM 0x300

#define _K1_MASK_MMC_S 0x200 // Speculative
#define _K1_SHIFT_MMC_S  9
#define _K1_BYTE_MMC_S 1
#define _K1_BFX_MMC_S 0x2
#define _K1_HALF_MMC_S 0
#define _K1_HFX_MMC_S 0x200

#define _K1_MASK_PS_SN 0xfff0000 // SCALL Number
#define _K1_SHIFT_PS_SN  16
#define _K1_HALF_PS_SN 1
#define _K1_HFX_PS_SN 0xfff

#define _K1_MASK_MMC_SNE 0x40000 // Speculative NOMAPPING Enable
#define _K1_SHIFT_MMC_SNE  18
#define _K1_BYTE_MMC_SNE 2
#define _K1_BFX_MMC_SNE 0x4
#define _K1_HALF_MMC_SNE 1
#define _K1_HFX_MMC_SNE 0x4

#define _K1_MASK_MMC_SPE 0x80000 // Speculative PROTECTION Enable
#define _K1_SHIFT_MMC_SPE  19
#define _K1_BYTE_MMC_SPE 2
#define _K1_BFX_MMC_SPE 0x8
#define _K1_HALF_MMC_SPE 1
#define _K1_HFX_MMC_SPE 0x8

#define _K1_MASK_TC_T0CE 0x10000 // Timer 0 Count Enable
#define _K1_SHIFT_TC_T0CE  16
#define _K1_BYTE_TC_T0CE 2
#define _K1_BFX_TC_T0CE 0x1
#define _K1_HALF_TC_T0CE 1
#define _K1_HFX_TC_T0CE 0x1

#define _K1_MASK_TC_T0IE 0x40000 // Timer 0 Interrupt Enable
#define _K1_SHIFT_TC_T0IE  18
#define _K1_BYTE_TC_T0IE 2
#define _K1_BFX_TC_T0IE 0x4
#define _K1_HALF_TC_T0IE 1
#define _K1_HFX_TC_T0IE 0x4

#define _K1_MASK_TC_T0ST 0x100000 // Timer 0 Status
#define _K1_SHIFT_TC_T0ST  20
#define _K1_BYTE_TC_T0ST 2
#define _K1_BFX_TC_T0ST 0x10
#define _K1_HALF_TC_T0ST 1
#define _K1_HFX_TC_T0ST 0x10

#define _K1_MASK_TC_T1CE 0x20000 // Timer 1 Count Enable
#define _K1_SHIFT_TC_T1CE  17
#define _K1_BYTE_TC_T1CE 2
#define _K1_BFX_TC_T1CE 0x2
#define _K1_HALF_TC_T1CE 1
#define _K1_HFX_TC_T1CE 0x2

#define _K1_MASK_TC_T1IE 0x80000 // Timer 1 Interrupt Enable
#define _K1_SHIFT_TC_T1IE  19
#define _K1_BYTE_TC_T1IE 2
#define _K1_BFX_TC_T1IE 0x8
#define _K1_HALF_TC_T1IE 1
#define _K1_HFX_TC_T1IE 0x8

#define _K1_MASK_TC_T1ST 0x200000 // Timer 1 Status
#define _K1_SHIFT_TC_T1ST  21
#define _K1_BYTE_TC_T1ST 2
#define _K1_BFX_TC_T1ST 0x20
#define _K1_HALF_TC_T1ST 1
#define _K1_HFX_TC_T1ST 0x20

#define _K1_MASK_TC_TC 0xffffffff // Timer Control
#define _K1_SHIFT_TC_TC  0

#define _K1_MASK_TC_TCE 0x400000 // Timer Chaining Enable
#define _K1_SHIFT_TC_TCE  22
#define _K1_BYTE_TC_TCE 2
#define _K1_BFX_TC_TCE 0x40
#define _K1_HALF_TC_TCE 1
#define _K1_HFX_TC_TCE 0x40

#define _K1_MASK_TC_TDC 0x800000 // Timer Divide Clock
#define _K1_SHIFT_TC_TDC  23
#define _K1_BYTE_TC_TDC 2
#define _K1_BFX_TC_TDC 0x80
#define _K1_HALF_TC_TDC 1
#define _K1_HFX_TC_TDC 0x80

#define _K1_MASK_CS_UN 0x10 // IEEE 754 Underflow
#define _K1_SHIFT_CS_UN  4
#define _K1_BYTE_CS_UN 0
#define _K1_BFX_CS_UN 0x10
#define _K1_HALF_CS_UN 0
#define _K1_HFX_CS_UN 0x10

#define _K1_MASK_PS_USE 0x200 // Uncached Streaming Enable
#define _K1_SHIFT_PS_USE  9
#define _K1_BYTE_PS_USE 1
#define _K1_BFX_PS_USE 0x2
#define _K1_HALF_PS_USE 0
#define _K1_HFX_PS_USE 0x200

#define _K1_MASK_TC_WDE 0x1000000 // Watchdog Decounting Enable
#define _K1_SHIFT_TC_WDE  24
#define _K1_BYTE_TC_WDE 3
#define _K1_BFX_TC_WDE 0x1
#define _K1_HALF_TC_WDE 1
#define _K1_HFX_TC_WDE 0x100

#define _K1_MASK_TC_WIE 0x2000000 // Watchdog Interrupt Enable
#define _K1_SHIFT_TC_WIE  25
#define _K1_BYTE_TC_WIE 3
#define _K1_BFX_TC_WIE 0x2
#define _K1_HALF_TC_WIE 1
#define _K1_HFX_TC_WIE 0x200

#define _K1_MASK_CS_WU 0x8000 // Wake-Up
#define _K1_SHIFT_CS_WU  15
#define _K1_BYTE_CS_WU 1
#define _K1_BFX_CS_WU 0x80
#define _K1_HALF_CS_WU 0
#define _K1_HFX_CS_WU 0x8000

#define _K1_MASK_TC_WUI 0x4000000 // Watchdog Underflow Inform
#define _K1_SHIFT_TC_WUI  26
#define _K1_BYTE_TC_WUI 3
#define _K1_BFX_TC_WUI 0x4
#define _K1_HALF_TC_WUI 1
#define _K1_HFX_TC_WUI 0x400

#define _K1_MASK_TC_WUS 0x8000000 // Watchdog Underflow Status
#define _K1_SHIFT_TC_WUS  27
#define _K1_BYTE_TC_WUS 3
#define _K1_BFX_TC_WUS 0x8
#define _K1_HALF_TC_WUS 1
#define _K1_HFX_TC_WUS 0x800
#endif
